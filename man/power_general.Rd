% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/powerss.R
\name{power_general}
\alias{power_general}
\title{Power approximation robust to model misspecification}
\usage{
power_general(
  response,
  predictions,
  target_effect,
  exposure_prob,
  estimand_fun = "ate",
  estimand_fun_deriv0 = NULL,
  estimand_fun_deriv1 = NULL,
  inv_estimand_fun = NULL,
  tolerance = sqrt(.Machine$double.eps),
  verbose = options::opt("verbose"),
  ...
)
}
\arguments{
\item{exposure_prob}{a \code{numeric} with the probabiliy of being in
"group 1" (rather than group 0) in groups defined by \code{exposure_indicator}.
As a default, the ratio of 1's in data is used.}

\item{estimand_fun}{a \code{function} with arguments \code{psi1} and \code{psi0} specifying
the estimand. Alternative, specify "ate" or "rate_ratio" as a \code{character}
to use one of the default estimand functions. See
more details in the "Estimand" section of this documentation.}

\item{estimand_fun_deriv0}{a \code{function} specifying the derivative of \code{estimand_fun} wrt. \code{psi0}. As a default
the algorithm will use symbolic differentiation to automatically find the derivative from \code{estimand_fun}}

\item{estimand_fun_deriv1}{a \code{function} specifying the derivative of \code{estimand_fun} wrt. \code{psi1}. As a default
the algorithm will use symbolic differentiation to automatically find the derivative from \code{estimand_fun}}

\item{inv_estimand_fun}{(optional) a \code{function} with arguments \code{psi0} and
\code{target_effect}, so \code{estimand_fun(psi1 = y, psi0 = x) = z} and
\code{inv_estimand_fun(psi0 = x, target_effect = z) = y} for all x, y, z.
If left as \code{NULL}, the inverse will be found automatically}

\item{tolerance}{passed to \link{all.equal} when comparing calculated \code{target_effect}
from derivations and given \code{target_effect}.}

\item{verbose}{\code{numeric} verbosity level. Higher values means more information is
printed in console. A value of 0 means nothing is printed to console during
execution (Defaults to \code{2}, overwritable using option 'postcard.verbose' or environment variable 'R_POSTCARD_VERBOSE')}

\item{...}{arguments passed to \verb{[stats::uniroot]}, which is used to find the
inverse of \code{estimand_fun}, when \code{inv_estimand_fun} is \code{NULL}.}
}
\value{
a \code{numeric} with the estimated power.
}
\description{
Power approximation robust to model misspecification
}
\examples{
# Generate a data set to use as an example
n <- 100
exposure_prob <- .5

dat_gaus <- glm_data(Y ~ 1+2*X1-X2+3*A,
                X1 = rnorm(n),
                X2 = rgamma(n, shape = 2),
                A = rbinom(n, size = 1, prob = exposure_prob),
                family = gaussian())

pred_model <- glm(Y ~ X1 + X2 + A, data = dat_gaus)
preds <- predict(pred_model, newdata = dat_gaus, type = "response")

power_general(
  response = dat_gaus$Y,
  predictions = preds,
  target_effect = 2,
  exposure_prob = exposure_prob
)
}
